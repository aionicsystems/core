// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class AssetEntity extends ethereum.Event {
  get params(): AssetEntity__Params {
    return new AssetEntity__Params(this);
  }
}

export class AssetEntity__Params {
  _event: AssetEntity;

  constructor(event: AssetEntity) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get symbol(): string {
    return this._event.parameters[2].value.toString();
  }

  get dataFeedAddress(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get aggregatorAddress(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get rate(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get liquidationRatio(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get decimals(): i32 {
    return this._event.parameters[7].value.toI32();
  }

  get latestPrice(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class LoanEntity extends ethereum.Event {
  get params(): LoanEntity__Params {
    return new LoanEntity__Params(this);
  }
}

export class LoanEntity__Params {
  _event: LoanEntity;

  constructor(event: LoanEntity) {
    this._event = event;
  }

  get loanAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get collateralAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get assetAddress(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get liabilityAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get borrowingRatio(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get liquidationRatio(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get interestRate(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get lastCollection(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get collectorFee(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }

  get daoFee(): BigInt {
    return this._event.parameters[10].value.toBigInt();
  }

  get liquidatorFee(): BigInt {
    return this._event.parameters[11].value.toBigInt();
  }

  get precision(): i32 {
    return this._event.parameters[12].value.toI32();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Received extends ethereum.Event {
  get params(): Received__Params {
    return new Received__Params(this);
  }
}

export class Received__Params {
  _event: Received;

  constructor(event: Received) {
    this._event = event;
  }

  get param0(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get param1(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class WindowEntity extends ethereum.Event {
  get params(): WindowEntity__Params {
    return new WindowEntity__Params(this);
  }
}

export class WindowEntity__Params {
  _event: WindowEntity;

  constructor(event: WindowEntity) {
    this._event = event;
  }

  get windowAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get etherDataFeedAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get borrowingRatio(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get collectorFee(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get daoFee(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get liquidatorFee(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get precision(): i32 {
    return this._event.parameters[7].value.toI32();
  }
}

export class Window extends ethereum.SmartContract {
  static bind(address: Address): Window {
    return new Window("Window", address);
  }

  approveAsset(
    assetDataFeedAddress: Address,
    name: string,
    symbol: string,
    rate: BigInt,
    liquidationRatio: BigInt,
  ): Address {
    let result = super.call(
      "approveAsset",
      "approveAsset(address,string,string,uint32,uint32):(address)",
      [
        ethereum.Value.fromAddress(assetDataFeedAddress),
        ethereum.Value.fromString(name),
        ethereum.Value.fromString(symbol),
        ethereum.Value.fromUnsignedBigInt(rate),
        ethereum.Value.fromUnsignedBigInt(liquidationRatio),
      ],
    );

    return result[0].toAddress();
  }

  try_approveAsset(
    assetDataFeedAddress: Address,
    name: string,
    symbol: string,
    rate: BigInt,
    liquidationRatio: BigInt,
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "approveAsset",
      "approveAsset(address,string,string,uint32,uint32):(address)",
      [
        ethereum.Value.fromAddress(assetDataFeedAddress),
        ethereum.Value.fromString(name),
        ethereum.Value.fromString(symbol),
        ethereum.Value.fromUnsignedBigInt(rate),
        ethereum.Value.fromUnsignedBigInt(liquidationRatio),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  assets(param0: Address): Address {
    let result = super.call("assets", "assets(address):(address)", [
      ethereum.Value.fromAddress(param0),
    ]);

    return result[0].toAddress();
  }

  try_assets(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall("assets", "assets(address):(address)", [
      ethereum.Value.fromAddress(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  borrowingRatio(): BigInt {
    let result = super.call("borrowingRatio", "borrowingRatio():(uint32)", []);

    return result[0].toBigInt();
  }

  try_borrowingRatio(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "borrowingRatio",
      "borrowingRatio():(uint32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  collectorFee(): BigInt {
    let result = super.call("collectorFee", "collectorFee():(uint32)", []);

    return result[0].toBigInt();
  }

  try_collectorFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("collectorFee", "collectorFee():(uint32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  contractEther(): BigInt {
    let result = super.call("contractEther", "contractEther():(uint256)", []);

    return result[0].toBigInt();
  }

  try_contractEther(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "contractEther",
      "contractEther():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  daoFee(): BigInt {
    let result = super.call("daoFee", "daoFee():(uint32)", []);

    return result[0].toBigInt();
  }

  try_daoFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("daoFee", "daoFee():(uint32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  dataFeedPrice(dataFeed: Address): BigInt {
    let result = super.call(
      "dataFeedPrice",
      "dataFeedPrice(address):(uint256)",
      [ethereum.Value.fromAddress(dataFeed)],
    );

    return result[0].toBigInt();
  }

  try_dataFeedPrice(dataFeed: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "dataFeedPrice",
      "dataFeedPrice(address):(uint256)",
      [ethereum.Value.fromAddress(dataFeed)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  etherDataFeedAddress(): Address {
    let result = super.call(
      "etherDataFeedAddress",
      "etherDataFeedAddress():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_etherDataFeedAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "etherDataFeedAddress",
      "etherDataFeedAddress():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getChainlinkDataFeedLatestAnswer(dataFeed: Address): BigInt {
    let result = super.call(
      "getChainlinkDataFeedLatestAnswer",
      "getChainlinkDataFeedLatestAnswer(address):(int256)",
      [ethereum.Value.fromAddress(dataFeed)],
    );

    return result[0].toBigInt();
  }

  try_getChainlinkDataFeedLatestAnswer(
    dataFeed: Address,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getChainlinkDataFeedLatestAnswer",
      "getChainlinkDataFeedLatestAnswer(address):(int256)",
      [ethereum.Value.fromAddress(dataFeed)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  liquidatorFee(): BigInt {
    let result = super.call("liquidatorFee", "liquidatorFee():(uint32)", []);

    return result[0].toBigInt();
  }

  try_liquidatorFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("liquidatorFee", "liquidatorFee():(uint32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  loans(param0: Address): Address {
    let result = super.call("loans", "loans(address):(address)", [
      ethereum.Value.fromAddress(param0),
    ]);

    return result[0].toAddress();
  }

  try_loans(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall("loans", "loans(address):(address)", [
      ethereum.Value.fromAddress(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  precision(): i32 {
    let result = super.call("precision", "precision():(uint8)", []);

    return result[0].toI32();
  }

  try_precision(): ethereum.CallResult<i32> {
    let result = super.tryCall("precision", "precision():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _precision(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get _borrowingRatio(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _collectorFee(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _daoFee(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _liquidatorFee(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _etherDataFeedAddress(): Address {
    return this._call.inputValues[6].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ApproveAssetCall extends ethereum.Call {
  get inputs(): ApproveAssetCall__Inputs {
    return new ApproveAssetCall__Inputs(this);
  }

  get outputs(): ApproveAssetCall__Outputs {
    return new ApproveAssetCall__Outputs(this);
  }
}

export class ApproveAssetCall__Inputs {
  _call: ApproveAssetCall;

  constructor(call: ApproveAssetCall) {
    this._call = call;
  }

  get assetDataFeedAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get symbol(): string {
    return this._call.inputValues[2].value.toString();
  }

  get rate(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get liquidationRatio(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class ApproveAssetCall__Outputs {
  _call: ApproveAssetCall;

  constructor(call: ApproveAssetCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class IssueCall extends ethereum.Call {
  get inputs(): IssueCall__Inputs {
    return new IssueCall__Inputs(this);
  }

  get outputs(): IssueCall__Outputs {
    return new IssueCall__Outputs(this);
  }
}

export class IssueCall__Inputs {
  _call: IssueCall;

  constructor(call: IssueCall) {
    this._call = call;
  }

  get assetAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class IssueCall__Outputs {
  _call: IssueCall;

  constructor(call: IssueCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetBorrowingRatioCall extends ethereum.Call {
  get inputs(): SetBorrowingRatioCall__Inputs {
    return new SetBorrowingRatioCall__Inputs(this);
  }

  get outputs(): SetBorrowingRatioCall__Outputs {
    return new SetBorrowingRatioCall__Outputs(this);
  }
}

export class SetBorrowingRatioCall__Inputs {
  _call: SetBorrowingRatioCall;

  constructor(call: SetBorrowingRatioCall) {
    this._call = call;
  }

  get value(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetBorrowingRatioCall__Outputs {
  _call: SetBorrowingRatioCall;

  constructor(call: SetBorrowingRatioCall) {
    this._call = call;
  }
}

export class SetCollectorFeeCall extends ethereum.Call {
  get inputs(): SetCollectorFeeCall__Inputs {
    return new SetCollectorFeeCall__Inputs(this);
  }

  get outputs(): SetCollectorFeeCall__Outputs {
    return new SetCollectorFeeCall__Outputs(this);
  }
}

export class SetCollectorFeeCall__Inputs {
  _call: SetCollectorFeeCall;

  constructor(call: SetCollectorFeeCall) {
    this._call = call;
  }

  get value(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetCollectorFeeCall__Outputs {
  _call: SetCollectorFeeCall;

  constructor(call: SetCollectorFeeCall) {
    this._call = call;
  }
}

export class SetDaoFeeCall extends ethereum.Call {
  get inputs(): SetDaoFeeCall__Inputs {
    return new SetDaoFeeCall__Inputs(this);
  }

  get outputs(): SetDaoFeeCall__Outputs {
    return new SetDaoFeeCall__Outputs(this);
  }
}

export class SetDaoFeeCall__Inputs {
  _call: SetDaoFeeCall;

  constructor(call: SetDaoFeeCall) {
    this._call = call;
  }

  get value(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetDaoFeeCall__Outputs {
  _call: SetDaoFeeCall;

  constructor(call: SetDaoFeeCall) {
    this._call = call;
  }
}

export class SetEtherDataFeedCall extends ethereum.Call {
  get inputs(): SetEtherDataFeedCall__Inputs {
    return new SetEtherDataFeedCall__Inputs(this);
  }

  get outputs(): SetEtherDataFeedCall__Outputs {
    return new SetEtherDataFeedCall__Outputs(this);
  }
}

export class SetEtherDataFeedCall__Inputs {
  _call: SetEtherDataFeedCall;

  constructor(call: SetEtherDataFeedCall) {
    this._call = call;
  }

  get _etherDataFeedAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetEtherDataFeedCall__Outputs {
  _call: SetEtherDataFeedCall;

  constructor(call: SetEtherDataFeedCall) {
    this._call = call;
  }
}

export class SetLiquidatorFeeCall extends ethereum.Call {
  get inputs(): SetLiquidatorFeeCall__Inputs {
    return new SetLiquidatorFeeCall__Inputs(this);
  }

  get outputs(): SetLiquidatorFeeCall__Outputs {
    return new SetLiquidatorFeeCall__Outputs(this);
  }
}

export class SetLiquidatorFeeCall__Inputs {
  _call: SetLiquidatorFeeCall;

  constructor(call: SetLiquidatorFeeCall) {
    this._call = call;
  }

  get value(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetLiquidatorFeeCall__Outputs {
  _call: SetLiquidatorFeeCall;

  constructor(call: SetLiquidatorFeeCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
