type AssetEntity @entity {
  id: Bytes!
  name: String! # string
  symbol: String! # string
  token: TokenEntity!
  rate: BigInt! # 500 = 5%
  liquidationRatio: BigInt! # 12500 = 125%
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  loans: [LoanEntity!]! @derivedFrom(field: "asset")
  latestProtocolPrice: BigDecimal! # USD/ASSET
  latestMarketPrice: BigDecimal! # USD/ASSET
}

type LoanEntity @entity {
  id: Bytes! # Address of Loan
  owner: OwnerEntity!
  collateralAmount: BigInt! # uint256
  asset: AssetEntity!
  liabilityAmount: BigInt! # uint256
  borrowingRatio: BigInt! #uint32
  liquidationRatio: BigInt! #uint32
  interestRate: BigInt! # uint32
  lastCollection: BigInt! # uint256
  collectorFee: BigInt! # uint32
  daoFee: BigInt! # uint32
  liquidatorFee: BigInt! # uint32
  precision: Int! # uint8
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnerEntity @entity {
  id: Bytes!
  loans: [LoanEntity!]! @derivedFrom(field: "owner")
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type AggregatorEntity @entity {
  id: Bytes! # address
  token: TokenEntity!
  decimals: Int # uint8
  prices: [DataPointEntity!] @derivedFrom(field: "aggregator")
}

type DataPointEntity @entity {
  id: Bytes! # bytes - transaction hash
  token: TokenEntity!
  aggregator: AggregatorEntity!
  price: BigDecimal! # int256
  roundId: BigInt! # uint256
  blockNumber: BigInt! # uint256
  blockTimestamp: BigInt! # uint256
}

type WindowEntity @entity {
  id: Bytes! # Address of Window
  owner: Bytes! # Owner of the Window
  etherDataFeedAddress: Bytes! # Ether Data Feed Address
  borrowingRatio: BigInt! # uint32
  collectorFee: BigInt! # uint32
  daoFee: BigInt! # uint32
  liquidatorFee: BigInt! # uint32
  precision: Int! # uint8
}

type PairEntity @entity {
  id: Bytes!
  asset: AssetEntity!
  base: TokenEntity!
  reserveAsset: BigInt!
  reserveBase: BigInt!
  prices: [PriceEntity!] @derivedFrom(field: "pair")
}

type PriceEntity @entity {
  id: Bytes! # Address of Price
  pair: PairEntity!
  asset: AssetEntity!
  base: TokenEntity!
  price: BigDecimal! # uint256 // needs to be equivalent to aggregator price format
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TokenEntity @entity {
  id: Bytes!
  name: String!
  symbol: String!
  decimals: Int!
  totalSupply: BigInt!
  dataFeedAddress: Bytes! # address
  aggregators: [AggregatorEntity!] @derivedFrom(field: "token")
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}